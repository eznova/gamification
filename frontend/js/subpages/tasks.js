import { reloadMenu } from "../navbar.js";
const backendUrl = localStorage.getItem('backendUrl');


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
async function getTasks(userId, backendUrl, signal) {
    const response = await fetch(`${backendUrl}/tasks/get`, {
        headers: {
            'Authorization': `Bearer ${userId}`,
            'Content-Type': 'application/json'
        },
        method: 'POST',
        body: JSON.stringify({
            'user_id': userId
        }),
        signal
    })
    
    if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
    }
    const data = await response.json();
    return data;
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á–∏
function createTaskCard(userId, task) {
    const taskCard = document.createElement('div');
    taskCard.classList.add('mb-3', 'card');
    taskCard.style.padding = '1em';
    taskCard.style.width = '100%';
    taskCard.id = `task-${task.id}`;
    taskCard.style.alignItems = 'flex-start';

    const taskCardBody = document.createElement('div');
    // taskCardBody.classList.add('task-card-body');

    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –≤–µ—Å–∞ (1 —Å—Ç—Ä–æ–∫–∞)
    const row1 = document.createElement('div');
    row1.classList.add('row', 'mb-2');
    
    const titleCol = document.createElement('div');
    titleCol.classList.add('col-10'); // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–≤–∞
    const taskName = document.createElement('p');
    taskName.classList.add('achievement-full-title');
    taskName.textContent = task.task_name;
    titleCol.appendChild(taskName);
    
    const weightCol = document.createElement('div');
    weightCol.classList.add('col-2', 'text-end'); // –ü—Ä–∏–∫–ª–µ–∏–≤–∞–µ–º –≤–µ—Å –∫ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
    const taskWeight = document.createElement('div');
    taskWeight.classList.add('achievement-weight');
    taskWeight.textContent = `${task.task_weight} ‚≠ê`; // –ó–∞–º–µ–Ω–∞ "Weight" –Ω–∞ –∑–≤—ë–∑–¥–æ—á–∫—É
    weightCol.appendChild(taskWeight);

    row1.appendChild(titleCol);
    row1.appendChild(weightCol);
    taskCardBody.appendChild(row1);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    const taskDescription = document.createElement('div');
    taskDescription.classList.add('achievement-description');;
    taskDescription.textContent = task.task_description;
    taskCardBody.appendChild(taskDescription);

    // –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –æ—Ç–∫—Ä—ã—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if (task.is_open) {
        const completeButton = document.createElement('button');
        completeButton.classList.add('btn', 'btn-success');
        completeButton.style.marginLeft = '1em';
        completeButton.style.marginTop = '1em';
        completeButton.textContent = '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ';
        completeButton.addEventListener('click', () => {
            completeTask(task, userId, backendUrl);  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
        });
        taskCardBody.appendChild(completeButton);
    }

    taskCard.appendChild(taskCardBody);

    const tasksContainer = document.getElementById('tasks-content');
    tasksContainer.appendChild(taskCard);
}


function completeTask(task, userId, backendUrl) {
    // –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    const container = document.getElementById('tasks-content'); // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    container.innerHTML = '';

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –¥–≤—É–º—è –∫–æ–ª–æ–Ω–∫–∞–º–∏
    const row = document.createElement('div');
    row.classList.add('row');
    
    const col1 = document.createElement('div');
    col1.classList.add('col');
    const title1 = document.createElement('div');
    title1.classList.add('page-title');
    title1.textContent = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è';
    col1.appendChild(title1);
    
    const col2 = document.createElement('div');
    col2.classList.add('col');
    const title2 = document.createElement('div');
    title2.classList.add('page-title');
    title2.textContent = task.task_name;
    col2.appendChild(title2);
    
    row.appendChild(col1);
    row.appendChild(col2);
    row.style.marginBottom = '2em';
    container.appendChild(row);

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    const descriptionDiv = document.createElement('div');
    descriptionDiv.classList.add('achievement-description');
    descriptionDiv.textContent = '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–ª—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –≤ —Ä–∞–º–∫–∞—Ö –∫–≤–µ—Å—Ç–∞. –ü–æ—Å–ª–µ –ø—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏–∏ –í–∞–º —Å—Ä–∞–∑—É –∂–µ –Ω–∞—á–∏—Å–ª—è—Ç –±–∞–ª–ª—ã üëç';
    container.appendChild(descriptionDiv);

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞ "–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ"
    const selectedTaskDiv = document.createElement('div');
    selectedTaskDiv.classList.add('card-title');
    selectedTaskDiv.style.marginTop = '2em';
    selectedTaskDiv.style.marginBottom = '1em';
    selectedTaskDiv.textContent = '–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ';
    container.appendChild(selectedTaskDiv);

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–∏—è
    const taskDescriptionDiv = document.createElement('div');
    taskDescriptionDiv.classList.add('card-wb', 'achievement-description');
    taskDescriptionDiv.style.padding = '1em';
    taskDescriptionDiv.textContent = task.task_description;
    taskDescriptionDiv.style.alignItems = 'center';
    container.appendChild(taskDescriptionDiv);

    // –§–æ—Ä–º–∞ —Å textarea –∏ –∫–Ω–æ–ø–∫–æ–π
    const form = document.createElement('form');
    
    // label –∏ textarea –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    const labelContainer = document.createElement('div');
    labelContainer.style.marginBottom = '1em'; // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
    
    const label = document.createElement('label');
    label.classList.add('card-title');
    label.setAttribute('for', 'task_description');
    label.textContent = '–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞';
    label.style.marginBottom = '1em';
    label.style.marginTop = '2em';
    
    const textarea = document.createElement('textarea');
    textarea.classList.add('card-wb', 'w-100');
    textarea.style.padding = '1em';
    
    textarea.setAttribute('required', 'true');
    textarea.setAttribute('maxlength', '1000');
    textarea.setAttribute('minlength', '10');
    textarea.setAttribute('name', 'task_description');
    textarea.setAttribute('id', 'task_description');
    textarea.setAttribute('rows', '5'); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫

    labelContainer.appendChild(label);
    labelContainer.appendChild(textarea);
    
    form.appendChild(labelContainer);

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
    const buttonContainer = document.createElement('div');
    buttonContainer.style.textAlign = 'right'; // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é

    // –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∞"
    const cancelButton = document.createElement('button');
    cancelButton.classList.add('btn', 'btn-gray');
    cancelButton.textContent = '–û—Ç–º–µ–Ω–∞';
    cancelButton.style.marginRight = '1em'; // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
    cancelButton.addEventListener('click', function() {
        loadTasksContent(userId, backendUrl); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    });
    buttonContainer.appendChild(cancelButton);

    // –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"
    const submitButton = document.createElement('button');
    submitButton.classList.add('btn', 'btn-primary');
    submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é';
    submitButton.style.marginTop = '1em'; // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –¥–ª—è –∫–Ω–æ–ø–∫–∏
    buttonContainer.appendChild(submitButton);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —Ñ–æ—Ä–º—É
    form.appendChild(buttonContainer);

    container.appendChild(form);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', async function(e) {
        e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const taskDescription = textarea.value; // –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ textarea
        const response = await fetch(`${backendUrl}/tasks/add/result`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                task_id: task.id,
                user_id: userId,
                result: taskDescription
            }),
            signal
        })
        .then(response => {
            return response.json()
        })
        .then(result => {
            console.log(result);
            if (result.result === "success") {
                showResultTaskContent(result);
            }
        })
        .catch(error => {
            console.error('Error sending task:', error);
        });
    });    
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á
export async function loadTasksContent(userId, backendUrl, signal) {
    // console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${backendUrl}`);
    const content = document.getElementById('content');
    try {
        const response = await fetch('subpages/tasks.html');  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞');
        }
        const template = await response.text();
        content.innerHTML = template;  // –í—Å—Ç–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –≤ DOM

        const tasks = await getTasks(userId, backendUrl);
        const tasksContainer = document.getElementById('tasks-content');
        
        const pageTitle = document.createElement('div');
        pageTitle.classList.add('row', 'page-title');
        pageTitle.style.marginBottom = '1em';
        pageTitle.textContent = '–û—Ç–∫—Ä—ã—Ç—ã–µ –∫–≤–µ—Å—Ç—ã';
        tasksContainer.appendChild(pageTitle);

        tasks.forEach(task => {
            createTaskCard(userId, task);
        });
    } catch (error) {
        console.log('Loading page was interruptedtasks:', error);
    }
}


// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∞—Å–∏–±–æ
function showResultTaskContent(result) {
    const resultContainer = document.getElementById('tasks-content');
    resultContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–æ—Ä–º—ã

    const resultDiv = document.createElement('div');
    resultDiv.classList.add('row');

    // –í—ã–≤–µ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫—É —Ç—Ä–∏ —Å–µ—Ä–¥–µ—á–∫–∞ imgs/big_heart.svg
    const hearts = document.createElement('div');
    hearts.classList.add('col-12', 'd-flex', 'justify-content-center', 'align-items-center');
    for (let i = 0; i < 3; i++) {
        const heart = document.createElement('img');
        heart.src = 'imgs/big_green_heart.svg';
        heart.alt = '–°–µ—Ä–¥–µ—á–∫–æ';
        heart.classList.add('heart');
        heart.style.width = '70px'; // –ó–∞–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å–µ—Ä–¥–µ—á–µ–∫
        heart.style.margin = '0 5px';
        hearts.appendChild(heart);
    }
    resultDiv.appendChild(hearts);

    const resultText = document.createElement('div');
    resultText.classList.add('col-12', 'text-center', 'mt-3');
    resultText.textContent = '–ö–≤–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!';

    const resultText2 = document.createElement('div');
    resultText2.classList.add('col-12', 'text-center', 'mt-3');
    resultText2.textContent = '–ú—ã —Å–≤—è–∂–µ–º—Å—è, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è';

    resultDiv.appendChild(resultText);
    resultDiv.appendChild(resultText2);

    resultContainer.appendChild(resultDiv);

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const buttonsDiv = document.createElement('div');
    buttonsDiv.classList.add('d-flex', 'justify-content-center', 'align-items-center', 'mt-4');

    const myPageButton = document.createElement('button');
    myPageButton.textContent = '–ö –ú–û–ï–ô –°–¢–†–ê–ù–ò–¶–ï';
    myPageButton.classList.add('btn', 'btn-gray', 'mx-2');
    myPageButton.addEventListener('click', () => {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É "–ú–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        reloadMenu('my-page');
    });
    buttonsDiv.appendChild(myPageButton);

    const anotherButton = document.createElement('button');
    anotherButton.textContent = '–ï–©–ï –ö–í–ï–°–¢–´';
    anotherButton.classList.add('btn', 'btn-gray', 'mx-2');
    anotherButton.addEventListener('click', () => {
        reloadMenu('season-tasks');
    });
    buttonsDiv.appendChild(anotherButton);

    resultContainer.appendChild(buttonsDiv);
}
